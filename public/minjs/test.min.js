$(function(){"use strict";QUnit.done=function(){var e=$("#fileupload").prop("action");$.getJSON(e,function(a){$.each(a.files,function(a,l){$.ajax({url:e+"?file="+encodeURIComponent(l.name),type:"DELETE"})})})};var e={setup:function(){$.widget("blueimp.fileupload",window.testBasicWidget,{})},teardown:function(){$(document).unbind()}},a={setup:function(){$.widget("blueimp.fileupload",window.testUIWidget,{})},teardown:function(){$(document).unbind()}};module("Initialization",e),test("Widget initialization",function(){var e=$("#fileupload").fileupload();ok(e.data("blueimp-fileupload")||e.data("fileupload"))}),test("Data attribute options",function(){$("#fileupload").attr("data-url","http://example.org"),$("#fileupload").fileupload(),strictEqual($("#fileupload").fileupload("option","url"),"http://example.org")}),test("File input initialization",function(){var e=$("#fileupload").fileupload();ok(e.fileupload("option","fileInput").length,"File input field inside of the widget"),ok(e.fileupload("option","fileInput").length,"Widget element as file input field")}),test("Drop zone initialization",function(){ok($("#fileupload").fileupload().fileupload("option","dropZone").length)}),test("Paste zone initialization",function(){ok($("#fileupload").fileupload({pasteZone:document}).fileupload("option","pasteZone").length)}),test("Event listeners initialization",function(){expect($.support.xhrFormDataFileUpload?4:1);var e={originalEvent:{dataTransfer:{files:[{}],types:["Files"]},clipboardData:{items:[{}]}}},a=$("#fileupload").fileupload({pasteZone:document,dragover:function(){return ok(!0,"Triggers dragover callback"),!1},drop:function(){return ok(!0,"Triggers drop callback"),!1},paste:function(){return ok(!0,"Triggers paste callback"),!1},change:function(){return ok(!0,"Triggers change callback"),!1}}),l=a.fileupload("option","fileInput"),t=a.fileupload("option","dropZone"),i=a.fileupload("option","pasteZone");l.trigger($.Event("change",e)),t.trigger($.Event("dragover",e)),t.trigger($.Event("drop",e)),i.trigger($.Event("paste",e))}),module("API",e),test("destroy",function(){expect(4);var e={originalEvent:{dataTransfer:{files:[{}],types:["Files"]},clipboardData:{items:[{}]}}},a={pasteZone:document,dragover:function(){return ok(!0,"Triggers dragover callback"),!1},drop:function(){return ok(!0,"Triggers drop callback"),!1},paste:function(){return ok(!0,"Triggers paste callback"),!1},change:function(){return ok(!0,"Triggers change callback"),!1}},l=$("#fileupload").fileupload(a),t=l.fileupload("option","fileInput"),i=l.fileupload("option","dropZone"),o=l.fileupload("option","pasteZone");i.bind("dragover",a.dragover),i.bind("drop",a.drop),o.bind("paste",a.paste),t.bind("change",a.change),l.fileupload("destroy"),t.trigger($.Event("change",e)),i.trigger($.Event("dragover",e)),i.trigger($.Event("drop",e)),o.trigger($.Event("paste",e))}),test("disable/enable",function(){expect($.support.xhrFormDataFileUpload?4:1);var e={originalEvent:{dataTransfer:{files:[{}],types:["Files"]},clipboardData:{items:[{}]}}},a=$("#fileupload").fileupload({pasteZone:document,dragover:function(){return ok(!0,"Triggers dragover callback"),!1},drop:function(){return ok(!0,"Triggers drop callback"),!1},paste:function(){return ok(!0,"Triggers paste callback"),!1},change:function(){return ok(!0,"Triggers change callback"),!1}}),l=a.fileupload("option","fileInput"),t=a.fileupload("option","dropZone"),i=a.fileupload("option","pasteZone");a.fileupload("disable"),l.trigger($.Event("change",e)),t.trigger($.Event("dragover",e)),t.trigger($.Event("drop",e)),i.trigger($.Event("paste",e)),a.fileupload("enable"),l.trigger($.Event("change",e)),t.trigger($.Event("dragover",e)),t.trigger($.Event("drop",e)),i.trigger($.Event("paste",e))}),test("option",function(){expect($.support.xhrFormDataFileUpload?10:7);var e={originalEvent:{dataTransfer:{files:[{}],types:["Files"]},clipboardData:{items:[{}]}}},a=$("#fileupload").fileupload({pasteZone:document,dragover:function(){return ok(!0,"Triggers dragover callback"),!1},drop:function(){return ok(!0,"Triggers drop callback"),!1},paste:function(){return ok(!0,"Triggers paste callback"),!1},change:function(){return ok(!0,"Triggers change callback"),!1}}),l=a.fileupload("option","fileInput"),t=a.fileupload("option","dropZone"),i=a.fileupload("option","pasteZone");a.fileupload("option","fileInput",null),a.fileupload("option","dropZone",null),a.fileupload("option","pasteZone",null),l.trigger($.Event("change",e)),t.trigger($.Event("dragover",e)),t.trigger($.Event("drop",e)),i.trigger($.Event("paste",e)),a.fileupload("option","dropZone","body"),strictEqual(a.fileupload("option","dropZone")[0],document.body,"Allow a query string as parameter for the dropZone option"),a.fileupload("option","dropZone",document),strictEqual(a.fileupload("option","dropZone")[0],document,"Allow a document element as parameter for the dropZone option"),a.fileupload("option","pasteZone","body"),strictEqual(a.fileupload("option","pasteZone")[0],document.body,"Allow a query string as parameter for the pasteZone option"),a.fileupload("option","pasteZone",document),strictEqual(a.fileupload("option","pasteZone")[0],document,"Allow a document element as parameter for the pasteZone option"),a.fileupload("option","fileInput",":file"),strictEqual(a.fileupload("option","fileInput")[0],$(":file")[0],"Allow a query string as parameter for the fileInput option"),a.fileupload("option","fileInput",$(":file")[0]),strictEqual(a.fileupload("option","fileInput")[0],$(":file")[0],"Allow a document element as parameter for the fileInput option"),a.fileupload("option","fileInput",l),a.fileupload("option","dropZone",t),a.fileupload("option","pasteZone",i),l.trigger($.Event("change",e)),t.trigger($.Event("dragover",e)),t.trigger($.Event("drop",e)),i.trigger($.Event("paste",e))}),asyncTest("add",function(){expect(2);var e={files:[{name:"test"}]};$("#fileupload").fileupload({add:function(a,l){strictEqual(l.files[0].name,e.files[0].name,"Triggers add callback")}}).fileupload("add",e).fileupload("option","add",function(e,a){a.submit().complete(function(){ok(!0,"data.submit() Returns a jqXHR object"),start()})}).fileupload("add",e)}),asyncTest("send",function(){expect(3);var e={files:[{name:"test"}]};$("#fileupload").fileupload({send:function(e,a){strictEqual(a.files[0].name,"test","Triggers send callback")}}).fileupload("send",e).fail(function(){ok(!0,"Allows to abort the request")}).complete(function(){ok(!0,"Returns a jqXHR object"),start()}).abort()}),module("Callbacks",e),asyncTest("add",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({add:function(){ok(!0,"Triggers add callback"),start()}}).fileupload("add",e)}),asyncTest("submit",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({submit:function(){return ok(!0,"Triggers submit callback"),start(),!1}}).fileupload("add",e)}),asyncTest("send",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({send:function(){return ok(!0,"Triggers send callback"),start(),!1}}).fileupload("send",e)}),asyncTest("done",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({done:function(){ok(!0,"Triggers done callback"),start()}}).fileupload("send",e)}),asyncTest("fail",function(){expect(1);var e={files:[{name:"test"}]},a=$("#fileupload").fileupload({url:"404",fail:function(){ok(!0,"Triggers fail callback"),start()}});(a.data("blueimp-fileupload")||a.data("fileupload"))._isXHRUpload=function(){return!0},a.fileupload("send",e)}),asyncTest("always",function(){expect(2);var e={files:[{name:"test"}]},a=0,l=$("#fileupload").fileupload({always:function(){ok(!0,"Triggers always callback"),1===a?start():a+=1}});(l.data("blueimp-fileupload")||l.data("fileupload"))._isXHRUpload=function(){return!0},l.fileupload("add",e).fileupload("option","url","404").fileupload("add",e)}),asyncTest("progress",function(){expect(1);var e={files:[{name:"test"}]},a=0;$("#fileupload").fileupload({forceIframeTransport:!0,progress:function(){ok(!0,"Triggers progress callback"),0===a?start():a+=1}}).fileupload("send",e)}),asyncTest("progressall",function(){expect(1);var e={files:[{name:"test"}]},a=0;$("#fileupload").fileupload({forceIframeTransport:!0,progressall:function(){ok(!0,"Triggers progressall callback"),0===a?start():a+=1}}).fileupload("send",e)}),asyncTest("start",function(){expect(1);var e={files:[{name:"1"},{name:"2"}]},a=0;$("#fileupload").fileupload({send:function(){a+=1},start:function(){ok(!a,"Triggers start callback before uploads"),start()}}).fileupload("send",e)}),asyncTest("stop",function(){expect(1);var e={files:[{name:"1"},{name:"2"}]},a=0;$("#fileupload").fileupload({send:function(){a+=1},always:function(){a-=1},stop:function(){ok(!a,"Triggers stop callback after uploads"),start()}}).fileupload("send",e)}),test("change",function(){var e=$("#fileupload").fileupload(),a=e.data("blueimp-fileupload")||e.data("fileupload"),l=e.fileupload("option","fileInput");expect(2),e.fileupload({change:function(e,a){ok(!0,"Triggers change callback"),strictEqual(a.files.length,0,"Returns empty files list")},add:$.noop}),a._onChange({data:{fileupload:a},target:l[0]})}),test("paste",function(){var e=$("#fileupload").fileupload(),a=e.data("blueimp-fileupload")||e.data("fileupload");expect(1),e.fileupload({paste:function(){ok(!0,"Triggers paste callback")},add:$.noop}),a._onPaste({data:{fileupload:a},originalEvent:{dataTransfer:{files:[{}]},clipboardData:{items:[{}]}},preventDefault:$.noop})}),test("drop",function(){var e=$("#fileupload").fileupload(),a=e.data("blueimp-fileupload")||e.data("fileupload");expect(1),e.fileupload({drop:function(){ok(!0,"Triggers drop callback")},add:$.noop}),a._onDrop({data:{fileupload:a},originalEvent:{dataTransfer:{files:[{}]},clipboardData:{items:[{}]}},preventDefault:$.noop})}),test("dragover",function(){var e=$("#fileupload").fileupload(),a=e.data("blueimp-fileupload")||e.data("fileupload");expect(1),e.fileupload({dragover:function(){ok(!0,"Triggers dragover callback")},add:$.noop}),a._onDragOver({data:{fileupload:a},originalEvent:{dataTransfer:{types:["Files"]}},preventDefault:$.noop})}),module("Options",e),test("paramName",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({paramName:null,send:function(e,a){return strictEqual(a.paramName[0],a.fileInput.prop("name"),"Takes paramName from file input field if not set"),!1}}).fileupload("send",e)}),test("url",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({url:null,send:function(e,a){return strictEqual(a.url,$(a.fileInput.prop("form")).prop("action"),"Takes url from form action if not set"),!1}}).fileupload("send",e)}),test("type",function(){expect(2);var e={files:[{name:"test"}]};$("#fileupload").fileupload({type:null,send:function(e,a){return strictEqual(a.type,"POST",'Request type is "POST" if not set to "PUT"'),!1}}).fileupload("send",e),$("#fileupload").fileupload({type:"PUT",send:function(e,a){return strictEqual(a.type,"PUT",'Request type is "PUT" if set to "PUT"'),!1}}).fileupload("send",e)}),test("replaceFileInput",function(){var e=$("#fileupload").fileupload(),a=e.data("blueimp-fileupload")||e.data("fileupload"),l=e.fileupload("option","fileInput"),t=l[0];expect(2),e.fileupload({replaceFileInput:!1,change:function(){strictEqual(e.fileupload("option","fileInput")[0],t,"Keeps file input with replaceFileInput: false")},add:$.noop}),a._onChange({data:{fileupload:a},target:l[0]}),e.fileupload({replaceFileInput:!0,change:function(){notStrictEqual(e.fileupload("option","fileInput")[0],t,"Replaces file input with replaceFileInput: true")},add:$.noop}),a._onChange({data:{fileupload:a},target:l[0]})}),asyncTest("forceIframeTransport",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({forceIframeTransport:!0,done:function(e,a){strictEqual(a.dataType.substr(0,6),"iframe","Iframe Transport is used"),start()}}).fileupload("send",e)}),test("singleFileUploads",function(){expect(3);var e=$("#fileupload").fileupload(),a={files:[{name:"1"},{name:"2"}]},l=1;(e.data("blueimp-fileupload")||e.data("fileupload"))._isXHRUpload=function(){return!0},$("#fileupload").fileupload({singleFileUploads:!0,add:function(){ok(!0,"Triggers callback number "+l.toString()),l+=1}}).fileupload("add",a).fileupload("option","singleFileUploads",!1).fileupload("add",a)}),test("limitMultiFileUploads",function(){expect(3);var e=$("#fileupload").fileupload(),a={files:[{name:"1"},{name:"2"},{name:"3"},{name:"4"},{name:"5"}]},l=1;(e.data("blueimp-fileupload")||e.data("fileupload"))._isXHRUpload=function(){return!0},$("#fileupload").fileupload({singleFileUploads:!1,limitMultiFileUploads:2,add:function(){ok(!0,"Triggers callback number "+l.toString()),l+=1}}).fileupload("add",a)}),test("limitMultiFileUploadSize",function(){expect(7);var e=$("#fileupload").fileupload(),a={files:[{name:"1-1",size:1e5},{name:"1-2",size:4e4},{name:"2-1",size:1e5},{name:"3-1",size:5e4},{name:"3-2",size:4e4},{name:"4-1",size:45e3}]},l={files:[{name:"5-1"},{name:"5-2"},{name:"6-1"},{name:"6-2"},{name:"7-1"}]},t=1;(e.data("blueimp-fileupload")||e.data("fileupload"))._isXHRUpload=function(){return!0},$("#fileupload").fileupload({singleFileUploads:!1,limitMultiFileUploads:2,limitMultiFileUploadSize:15e4,limitMultiFileUploadSizeOverhead:5e3,add:function(){ok(!0,"Triggers callback number "+t.toString()),t+=1}}).fileupload("add",a).fileupload("add",l)}),asyncTest("sequentialUploads",function(){expect(6);var e={files:[{name:"1"},{name:"2"},{name:"3"},{name:"4"},{name:"5"},{name:"6"}]},a=0,l=0,t=0,i=$("#fileupload").fileupload({sequentialUploads:!0,add:function(e,l){a+=1,4===a?l.submit().abort():l.submit()},send:function(){l+=1},done:function(){t+=1,strictEqual(l,t,"upload in order")},fail:function(e,a){strictEqual(a.errorThrown,"abort","upload aborted")},stop:function(){start()}});(i.data("blueimp-fileupload")||i.data("fileupload"))._isXHRUpload=function(){return!0},i.fileupload("add",e)}),asyncTest("limitConcurrentUploads",function(){expect(12);var e={files:[{name:"1"},{name:"2"},{name:"3"},{name:"4"},{name:"5"},{name:"6"},{name:"7"},{name:"8"},{name:"9"},{name:"10"},{name:"11"},{name:"12"}]},a=0,l=0,t=0,i=$("#fileupload").fileupload({limitConcurrentUploads:3,add:function(e,l){a+=1,4===a?l.submit().abort():l.submit()},send:function(){l+=1},done:function(){t+=1,ok(l-t<3)},fail:function(e,a){strictEqual(a.errorThrown,"abort","upload aborted")},stop:function(){start()}});(i.data("blueimp-fileupload")||i.data("fileupload"))._isXHRUpload=function(){return!0},i.fileupload("add",e)}),$.support.xhrFileUpload&&asyncTest("multipart",function(){expect(2);var e={files:[{name:"test.png",size:123,type:"image/png"}]};$("#fileupload").fileupload({multipart:!1,always:function(a,l){strictEqual(l.contentType,e.files[0].type,"non-multipart upload sets file type as contentType"),strictEqual(l.headers["Content-Disposition"],'attachment; filename="'+e.files[0].name+'"',"non-multipart upload sets Content-Disposition header"),start()}}).fileupload("send",e)}),module("UI Initialization",a),test("Widget initialization",function(){var e=$("#fileupload").fileupload();ok(e.data("blueimp-fileupload")||e.data("fileupload")),ok($("#fileupload").fileupload("option","uploadTemplate").length,"Initialized upload template"),ok($("#fileupload").fileupload("option","downloadTemplate").length,"Initialized download template")}),test("Buttonbar event listeners",function(){var e=$("#fileupload .fileupload-buttonbar"),a=[{name:"test"}];expect(4),$("#fileupload").fileupload({send:function(){ok(!0,"Started file upload via global start button")},fail:function(e,a){ok(!0,"Canceled file upload via global cancel button"),a.context.remove()},destroy:function(){ok(!0,"Delete action called via global delete button")}}),$("#fileupload").fileupload("add",{files:a}),e.find(".cancel").click(),$("#fileupload").fileupload("add",{files:a}),e.find(".start").click(),e.find(".cancel").click(),a[0].deleteUrl="http://example.org/banana.jpg",($("#fileupload").data("blueimp-fileupload")||$("#fileupload").data("fileupload"))._renderDownload(a).appendTo($("#fileupload .files")).show().find(".toggle").click(),e.find(".delete").click()}),module("UI API",a),test("destroy",function(){var e=$("#fileupload .fileupload-buttonbar"),a=[{name:"test"}];expect(1),$("#fileupload").fileupload({send:function(){return ok(!0,"This test should not run"),!1}}).fileupload("add",{files:a}).fileupload("destroy"),e.find(".start").click(function(){return ok(!0,"Clicked global start button"),!1}).click()}),test("disable/enable",function(){var e=$("#fileupload .fileupload-buttonbar");$("#fileupload").fileupload(),$("#fileupload").fileupload("disable"),strictEqual(e.find("input[type=file], button").not(":disabled").length,0,"Disables the buttonbar buttons"),$("#fileupload").fileupload("enable"),strictEqual(e.find("input[type=file], button").not(":disabled").length,4,"Enables the buttonbar buttons")}),module("UI Callbacks",a),test("destroy",function(){expect(3),$("#fileupload").fileupload({destroy:function(e,a){ok(!0,"Triggers destroy callback"),strictEqual(a.url,"test","Passes over deletion url parameter"),strictEqual(a.type,"DELETE","Passes over deletion request type parameter")}}),($("#fileupload").data("blueimp-fileupload")||$("#fileupload").data("fileupload"))._renderDownload([{name:"test",deleteUrl:"test",deleteType:"DELETE"}]).appendTo($("#fileupload .files")).show().find(".toggle").click(),$("#fileupload .fileupload-buttonbar .delete").click()}),asyncTest("added",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({added:function(a,l){start(),strictEqual(l.files[0].name,e.files[0].name,"Triggers added callback")},send:function(){return!1}}).fileupload("add",e)}),asyncTest("started",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({started:function(){return start(),ok("Triggers started callback"),!1},sent:function(){return!1}}).fileupload("send",e)}),asyncTest("sent",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({sent:function(a,l){return start(),strictEqual(l.files[0].name,e.files[0].name,"Triggers sent callback"),!1}}).fileupload("send",e)}),asyncTest("completed",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({completed:function(){return start(),ok("Triggers completed callback"),!1}}).fileupload("send",e)}),asyncTest("failed",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({failed:function(){return start(),ok("Triggers failed callback"),!1}}).fileupload("send",e).abort()}),asyncTest("stopped",function(){expect(1);var e={files:[{name:"test"}]};$("#fileupload").fileupload({stopped:function(){return start(),ok("Triggers stopped callback"),!1}}).fileupload("send",e)}),asyncTest("destroyed",function(){expect(1),$("#fileupload").fileupload({dataType:"html",destroyed:function(){start(),ok(!0,"Triggers destroyed callback")}}),($("#fileupload").data("blueimp-fileupload")||$("#fileupload").data("fileupload"))._renderDownload([{name:"test",deleteUrl:".",deleteType:"GET"}]).appendTo($("#fileupload .files")).show().find(".toggle").click(),$("#fileupload .fileupload-buttonbar .delete").click()}),module("UI Options",a),test("autoUpload",function(){expect(1),$("#fileupload").fileupload({autoUpload:!0,send:function(){return ok(!0,"Started file upload automatically"),!1}}).fileupload("add",{files:[{name:"test"}]}).fileupload("option","autoUpload",!1).fileupload("add",{files:[{name:"test"}]})}),test("maxNumberOfFiles",function(){expect(3);var e=0,a=0;$("#fileupload").fileupload({autoUpload:!0,maxNumberOfFiles:3,singleFileUploads:!1,send:function(){strictEqual(a+=1,e)},progress:$.noop,progressall:$.noop,done:$.noop,stop:$.noop}).fileupload("add",{files:[{name:e+=1}]}).fileupload("add",{files:[{name:e+=1}]}).fileupload("add",{files:[{name:e+=1}]}).fileupload("add",{files:[{name:"test"}]})}),test("maxFileSize",function(){expect(2);var e=0,a=0;$("#fileupload").fileupload({autoUpload:!0,maxFileSize:1e3,send:function(){return strictEqual(a+=1,e),!1}}).fileupload("add",{files:[{name:e+=1}]}).fileupload("add",{files:[{name:e+=1,size:999}]}).fileupload("add",{files:[{name:"test",size:1001}]}).fileupload({send:function(e,a){return ok(!$.blueimp.fileupload.prototype.options.send.call(this,e,a)),!1}})}),test("minFileSize",function(){expect(2);var e=0,a=0;$("#fileupload").fileupload({autoUpload:!0,minFileSize:1e3,send:function(){return strictEqual(a+=1,e),!1}}).fileupload("add",{files:[{name:e+=1}]}).fileupload("add",{files:[{name:e+=1,size:1001}]}).fileupload("add",{files:[{name:"test",size:999}]}).fileupload({send:function(e,a){return ok(!$.blueimp.fileupload.prototype.options.send.call(this,e,a)),!1}})}),test("acceptFileTypes",function(){expect(2);var e=0,a=0;$("#fileupload").fileupload({autoUpload:!0,acceptFileTypes:/(\.|\/)(gif|jpe?g|png)$/i,disableImageMetaDataLoad:!0,send:function(){return strictEqual(a+=1,e),!1}}).fileupload("add",{files:[{name:(e+=1)+".jpg"}]}).fileupload("add",{files:[{name:e+=1,type:"image/jpeg"}]}).fileupload("add",{files:[{name:"test.txt",type:"text/plain"}]}).fileupload({send:function(e,a){return ok(!$.blueimp.fileupload.prototype.options.send.call(this,e,a)),!1}})}),test("acceptFileTypes as HTML5 data attribute",function(){expect(2);var e=/(\.|\/)(gif|jpe?g|png)$/i;$("#fileupload").attr("data-accept-file-types",e.toString()).fileupload(),strictEqual($.type($("#fileupload").fileupload("option","acceptFileTypes")),$.type(e)),strictEqual($("#fileupload").fileupload("option","acceptFileTypes").toString(),e.toString())})});