{{#section 'header'}}
	<title>刘恒的小站 - H5项目常见问题及注意事项</title>
{{/section}}
<div class="expandable js-expandable">
<h4>H5项目常见问题及注意事项</h4>
<p>Meta基础知识：</p>
<ul>
<li class="unchanged">H5页面窗口自动调整到设备宽度，并禁止用户缩放页面</li>
</ul>
<pre><span class="pl-c"><span class="pl-c">//</span>一、HTML页面结构</span>
<span class="pl-k">&lt;</span>meta name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>viewport<span class="pl-pds">"</span></span> content<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no<span class="pl-pds">"</span></span> <span class="pl-k">/</span><span class="pl-k">&gt;</span>
<span class="pl-c"><span class="pl-c">//</span> width    设置viewport宽度，为一个正整数，或字符串‘device-width’</span>
<span class="pl-c"><span class="pl-c">//</span> height   设置viewport高度，一般设置了宽度，会自动解析出高度，可以不用设置</span>
<span class="pl-c"><span class="pl-c">//</span> initial-scale    默认缩放比例，为一个数字，可以带小数</span>
<span class="pl-c"><span class="pl-c">//</span> minimum-scale    允许用户最小缩放比例，为一个数字，可以带小数</span>
<span class="pl-c"><span class="pl-c">//</span> maximum-scale    允许用户最大缩放比例，为一个数字，可以带小数</span>
<span class="pl-c"><span class="pl-c">//</span> user-scalable    是否允许手动缩放</span>

<span class="pl-c"><span class="pl-c">//</span>二、JS动态判断</span>
<span class="pl-k">var</span> phoneWidth <span class="pl-k">=</span>  <span class="pl-c1">parseInt</span>(<span class="pl-c1">window</span>.<span class="pl-smi">screen</span>.<span class="pl-c1">width</span>);
<span class="pl-k">var</span> phoneScale <span class="pl-k">=</span> phoneWidth<span class="pl-k">/</span><span class="pl-c1">640</span>;
<span class="pl-k">var</span> ua <span class="pl-k">=</span> <span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>;
<span class="pl-k">if</span> (<span class="pl-sr"><span class="pl-pds">/</span>Android (<span class="pl-c1">\d</span><span class="pl-k">+</span><span class="pl-cce">\.</span><span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(ua)){
	<span class="pl-k">var</span> version <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-c1">RegExp</span>.<span class="pl-smi">$1</span>);
	<span class="pl-k">if</span>(version<span class="pl-k">&gt;</span><span class="pl-c1">2.3</span>){
		<span class="pl-c1">document</span>.<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">'</span>&lt;meta name="viewport" content="width=640, minimum-scale = <span class="pl-pds">'</span></span><span class="pl-k">+</span>phoneScale<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">'</span>, maximum-scale = <span class="pl-pds">'</span></span><span class="pl-k">+</span>phoneScale<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">'</span>, target-densitydpi=device-dpi"&gt;<span class="pl-pds">'</span></span>);
	}<span class="pl-k">else</span>{
		<span class="pl-c1">document</span>.<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">'</span>&lt;meta name="viewport" content="width=640, target-densitydpi=device-dpi"&gt;<span class="pl-pds">'</span></span>);
	}
} <span class="pl-k">else</span> {
	<span class="pl-c1">document</span>.<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">'</span>&lt;meta name="viewport" content="width=640, user-scalable=no, target-densitydpi=device-dpi"&gt;<span class="pl-pds">'</span></span>);
}</pre>
<ul>
<li class="unchanged">H5空白页基本meta标签</li>
</ul>
<pre><code>&lt;!-- 设置缩放 --&gt;
&lt;meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimal-ui" /&gt;
&lt;!-- 可隐藏地址栏，仅针对IOS的Safari（注：IOS7.0版本以后，safari上已看不到效果） --&gt;
&lt;meta name="apple-mobile-web-app-capable" content="yes" /&gt;
&lt;!-- 仅针对IOS的Safari顶端状态条的样式（可选default/black/black-translucent ） --&gt;
&lt;meta name="apple-mobile-web-app-status-bar-style" content="black" /&gt;
&lt;!-- IOS中禁用将数字识别为电话号码/忽略Android平台中对邮箱地址的识别 --&gt;
&lt;meta name="format-detection"content="telephone=no, email=no" /&gt;
</code></pre>
<ul>
<li class="unchanged">PC端基础meta标签</li>
</ul>
<pre><code>&lt;!-- 页面关键词--&gt;
&lt;meta name="keywords" content="your tags" /&gt;
&lt;!-- 页面描述--&gt;
&lt;meta name="description" content="150 words" /&gt;
&lt;!-- 搜索引擎索引方式：robotterms是一组使用逗号(,)分割的值，通常有如下几种取值：none，noindex，nofollow，all，index和follow。确保正确使用nofollow和noindex属性值。--&gt;
&lt;meta name="robots" content="index,follow" /&gt;
&lt;!--
    all：文件将被检索，且页面上的链接可以被查询；
    none：文件将不被检索，且页面上的链接不可以被查询；
    index：文件将被检索；
    follow：页面上的链接可以被查询；
    noindex：文件将不被检索；
    nofollow：页面上的链接不可以被查询。
 --&gt;
 
 &lt;!-- 页面重定向和刷新：content内的数字代表时间（秒），既多少时间后刷新。如果加url,则会重定向到指定网页（搜索引擎能够自动检测，也很容易被引擎视作误导而受到惩罚）。--&gt;
 &lt;meta http-equiv="refresh" content="0;url=" /&gt;
 
</code></pre>
<ul>
<li class="unchanged">页面缓存设置</li>
</ul>
<pre><code>&lt;!-- 清除缓存 --&gt;
&lt;meta http-equiv="pragma" content="no-cache"&gt;
&lt;meta http-equiv="cache-control" content="no-cache"&gt;
&lt;meta http-equiv="expires" content="0"&gt;   
</code></pre>
<ul>
<li class="unchanged">其他meta标签</li>
</ul>
<pre><code>&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;
&lt;meta name="renderer" content="webkit"&gt;
&lt;!-- 避免IE使用兼容模式 --&gt;
&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;
&lt;meta name="HandheldFriendly" content="true"&gt;
&lt;!-- 微软的老式浏览器 --&gt;
&lt;meta name="MobileOptimized" content="320"&gt;
&lt;!-- uc强制竖屏 --&gt;
&lt;meta name="screen-orientation" content="portrait"&gt;
&lt;!-- QQ强制竖屏 --&gt;
&lt;meta name="x5-orientation" content="portrait"&gt;
&lt;!-- UC强制全屏 --&gt;
&lt;meta name="full-screen" content="yes"&gt;
&lt;!-- QQ强制全屏 --&gt;
&lt;meta name="x5-fullscreen" content="true"&gt;
&lt;!-- UC应用模式 --&gt;
&lt;meta name="browsermode" content="application"&gt;
&lt;!-- QQ应用模式 --&gt;
&lt;meta name="x5-page-mode" content="app"&gt;
&lt;!-- windows phone 点击无高光 --&gt;
&lt;meta name="msapplication-tap-highlight" content="no"&gt;

&lt;meta name="author" content="author name" /&gt; &lt;!-- 定义网页作者 --&gt;
&lt;meta name="google" content="index,follow" /&gt;
&lt;meta name="googlebot" content="index,follow" /&gt;
&lt;meta name="verify" content="index,follow" /&gt;
</code></pre>
<p>####常见问题：</p>
<ul>
<li class="unchanged">移动端如何定义字体font-family</li>
</ul>
<pre>@ --------------------------------------中文字体的英文名称
@ 宋体      SimSun
@ 黑体      SimHei
@ 微信雅黑   Microsoft Yahei
@ 微软正黑体 Microsoft JhengHei
@ 新宋体    NSimSun
@ 新细明体  MingLiU
@ 细明体    MingLiU
@ 标楷体    DFKai-SB
@ 仿宋     FangSong
@ 楷体     KaiTi
@ 仿宋_GB2312  FangSong_GB2312
@ 楷体_GB2312  KaiTi_GB2312  
@
@ 说明：中文字体多数使用宋体、雅黑，英文用Helvetica

<span class="pl-ent">body</span> { <span class="pl-c1"><span class="pl-c1">font-family</span></span>: Microsoft Yahei,SimSun,<span class="pl-c1">Helvetica</span>; } </pre>
<ul>
<li class="unchanged">打电话发短信写邮件怎么实现</li>
</ul>
<pre>// 一、打电话
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>tel:0755-10086<span class="pl-pds">"</span></span>&gt;打电话给:0755-10086&lt;/<span class="pl-ent">a</span>&gt;

//  二、发短信，winphone系统无效
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>sms:10086<span class="pl-pds">"</span></span>&gt;发短信给: 10086&lt;/<span class="pl-ent">a</span>&gt;

// 三、写邮件
//注：在添加这些功能时，第一个功能以"?"开头，后面的以"<span class="pl-ii">&amp;</span>"开头
//1.普通邮件
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>mailto:863139978@qq.com<span class="pl-pds">"</span></span>&gt;点击我发邮件&lt;/<span class="pl-ent">a</span>&gt;
//2.收件地址后添加?cc=开头，可添加抄送地址（Android存在兼容问题）
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>mailto:863139978@qq.com?cc=zhangqian0406@yeah.net<span class="pl-pds">"</span></span>&gt;点击我发邮件&lt;/<span class="pl-ent">a</span>&gt;
//3.跟着抄送地址后，写上<span class="pl-ii">&amp;</span>bcc=,可添加密件抄送地址（Android存在兼容问题）
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>mailto:863139978@qq.com?cc=zhangqian0406@yeah.net<span class="pl-ii">&amp;</span>bcc=384900096@qq.com<span class="pl-pds">"</span></span>&gt;点击我发邮件&lt;/<span class="pl-ent">a</span>&gt;
//4.包含多个收件人、抄送、密件抄送人，用分号(;)隔开多个邮件人的地址
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>mailto:863139978@qq.com;384900096@qq.com<span class="pl-pds">"</span></span>&gt;点击我发邮件&lt;/<span class="pl-ent">a</span>&gt;
//5.包含主题，用?subject=
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>mailto:863139978@qq.com?subject=邮件主题<span class="pl-pds">"</span></span>&gt;点击我发邮件&lt;/<span class="pl-ent">a</span>&gt;
//6.包含内容，用?body=;如内容包含文本，使用%0A给文本换行 
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>mailto:863139978@qq.com?body=邮件主题内容%0A腾讯诚信%0A期待您的到来<span class="pl-pds">"</span></span>&gt;点击我发邮件&lt;/<span class="pl-ent">a</span>&gt;
//7.内容包含链接，含http(s)://等的文本自动转化为链接
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>mailto:863139978@qq.com?body=http://www.baidu.com<span class="pl-pds">"</span></span>&gt;点击我发邮件&lt;/<span class="pl-ent">a</span>&gt;
//8.内容包含图片（PC不支持）
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>mailto:863139978@qq.com?body=&lt;img src='images/1.jpg' /&gt;<span class="pl-pds">"</span></span>&gt;点击我发邮件&lt;/<span class="pl-ent">a</span>&gt;
//9.完整示例
&lt;<span class="pl-ent">a</span> <span class="pl-e">href</span>=<span class="pl-s"><span class="pl-pds">"</span>mailto:863139978@qq.com;384900096@qq.com?cc=zhangqian0406@yeah.net<span class="pl-ii">&amp;</span>bcc=993233461@qq.com<span class="pl-ii">&amp;</span>subject=[邮件主题]<span class="pl-ii">&amp;</span>body=腾讯诚邀您参与%0A%0Ahttp://www.baidu.com%0A%0A&lt;img src='images/1.jpg' /&gt;<span class="pl-pds">"</span></span>&gt;点击我发邮件&lt;/<span class="pl-ent">a</span>&gt;</pre>
<ul>
<li class="unchanged">移动端touch事件（区分webkit和winphone）</li>
</ul>
<pre><code>/* 当用户手指放在移动设备在屏幕上滑动会触发的touch事件 */
// 以下支持webkit
touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指
touchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动
touchend——当手指离开屏幕时触发
touchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用

//TouchEvent说明：
touches：屏幕上所有手指的信息
targetTouches：手指在目标区域的手指信息
changedTouches：最近一次触发该事件的手指信息
touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息

//参数信息(changedTouches[0])
clientX、clientY在显示区的坐标
target：当前元素

//事件响应顺序
ontouchstart  &gt; ontouchmove  &gt; ontouchend &gt; onclick

// 以下支持winphone 8
MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指
MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html{-ms-touch-action: none;}可以阻止默认情况的发生：阻止页面滚动
MSPointerUp——当手指离开屏幕时触发
</code></pre>
<ul>
<li class="unchanged">移动端click屏幕产生200-300ms的延时响应</li>
</ul>
<pre><code>说明：移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。

以下是历史原因，来源一个公司内一个同事的分享：
2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。

双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。

原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接&lt;a href="#"&gt;&lt;/a&gt;，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。

//解决方案：
fastclick可以解决在手机上点击事件的300ms延迟
zepto的touch模块，tap事件也是为了解决在click的延迟问题
</code></pre>
<ul>
<li class="unchanged">Rentina显示屏原理及设计方案</li>
</ul>
<pre><code>说明：retina屏是一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个。
在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍。
那么，前端的应对方案是：设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2

//例如图片宽高为：200px*200px，那么写法如下
.css{width:100px;height:100px;background-size:100px 100px;}
//其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为20px
.css{font-size:20px}

//image-set设计Rentina背景图
image-set,webkit私有属性，也是CSS4的属性，为解决Rentina屏幕下的图像而生。
.css {
	background: url(images/bg.jpg) no-repeat center;
	background: -webkit-image-set(
	url(images/bg.jpg) 1x,     //支持image-set普通屏
	url(images/bg-2x.jpg) 2x); //支持image-set的Rentinan
}
</code></pre>
<ul>
<li class="unchanged">点击元素产生背景或边框怎么去掉</li>
</ul>
<pre><code>//ios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0去除灰色半透明遮罩；
//android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果；
//winphone系统,点击标签产生的灰色半透明背景，能通过设置&lt;meta name="msapplication-tap-highlight" content="no"&gt;去掉；
//特殊说明：有些机型去除不了，如小米2。对于按钮类还有个办法，不使用a或者input标签，直接用div标签
a,button,input,textarea { 
	-webkit-tap-highlight-color: rgba(0,0,0,0); 
	-webkit-user-modify:read-write-plaintext-only; //-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符
}   
// 也可以 
* { -webkit-tap-highlight-color: rgba(0,0,0,0); }
//winphone下
&lt;meta name="msapplication-tap-highlight" content="no"&gt;
</code></pre>
<ul>
<li class="unchanged">美化表单元素</li>
</ul>
<pre>//一、使用appearance改变webkit浏览器的默认外观
<span class="pl-ent">input</span>,<span class="pl-ent">select</span> { <span class="pl-c1"><span class="pl-c1">-webkit-appearance</span></span>:<span class="pl-c1">none</span>; <span class="pl-c1"><span class="pl-c1">appearance</span></span>: <span class="pl-c1">none</span>; }

//二、winphone下，使用伪元素改变表单元素默认外观
//1<span class="pl-e">.禁用select默认箭头，</span><span class="pl-e">::-ms-expand</span>修改表单控件下拉箭头，设置隐藏并使用背景图片来修饰
<span class="pl-ent">select</span><span class="pl-e">::-ms-expand</span> { <span class="pl-c1"><span class="pl-c1">display</span></span>:<span class="pl-c1">none</span>; }

//2<span class="pl-e">.禁用radio和checkbox默认样式，</span><span class="pl-e">::-ms-check</span>修改表单复选框或单选框默认图标，设置隐藏并使用背景图片来修饰
<span class="pl-ent">input</span>[<span class="pl-e">type</span><span class="pl-k">=</span><span class="pl-s">radio</span>]<span class="pl-e">::-ms-check</span>,
<span class="pl-ent">input</span>[<span class="pl-e">type</span><span class="pl-k">=</span><span class="pl-s">checkbox</span>]<span class="pl-e">::-ms-check</span> { <span class="pl-c1"><span class="pl-c1">display</span></span>:<span class="pl-c1">none</span>; }

//3<span class="pl-e">.禁用pc端表单输入框默认清除按钮，</span><span class="pl-e">::-ms-clear</span>修改清除按钮，设置隐藏并使用背景图片来修饰
<span class="pl-ent">input</span>[<span class="pl-e">type</span><span class="pl-k">=</span><span class="pl-s">text</span>]<span class="pl-e">::-ms-clear</span>,
<span class="pl-ent">input</span>[<span class="pl-e">type</span><span class="pl-k">=</span><span class="pl-s">tel</span>]<span class="pl-e">::-ms-clear</span>,
<span class="pl-ent">input</span>[<span class="pl-e">type</span><span class="pl-k">=</span><span class="pl-s">number</span>]<span class="pl-e">::-ms-clear</span> { <span class="pl-c1"><span class="pl-c1">display</span></span>:<span class="pl-c1">none</span>; }</pre>
<ul>
<li class="unchanged">移动端字体单位font-size选择px还是rem</li>
</ul>
<pre><code>// 如需适配多种移动设备，建议使用rem。以下为参考值：
html { font-size: 62.5%; }   //10*16 = 62.5%
//设置12px字体   这里注意在rem前要加上对应的px值，解决不支持rem的浏览器的兼容问题，做到优雅降级
body { font-size:12px; font-size:1.2rem; }     
</code></pre>
<ul>
<li class="unchanged">超实用的CSS样式</li>
</ul>
<pre><code>//去掉webkit的滚动条——display: none;
//其他参数
::-webkit-scrollba //滚动条整体部分
::-webkit-scrollbar-thumb   //滚动条内的小方块
::-webkit-scrollbar-track   //滚动条轨道
::-webkit-scrollbar-button  //滚动条轨道两端按钮
::-webkit-scrollbar-track-piece  //滚动条中间部分，内置轨道
::-webkit-scrollbar-corner       //边角，两个滚动条交汇处
::-webkit-resizer            //两个滚动条的交汇处上用于通过拖动调整元素大小的小控件

// 禁止长按链接与图片弹出菜单
a,img { -webkit-touch-callout: none }    

// 禁止ios和android用户选中文字
html,body {-webkit-user-select:none; user-select: none; }

// 改变输入框placeholder的颜色值
::-webkit-input-placeholder { /* WebKit browsers */
color: #999; }
:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
color: #999; }
::-moz-placeholder { /* Mozilla Firefox 19+ */
color: #999; }
:-ms-input-placeholder { /* Internet Explorer 10+ */
color: #999; }
input:focus::-webkit-input-placeholder{ color:#999; }

// android上去掉语音输入按钮
input::-webkit-input-speech-button {display: none}

// 阻止windows Phone的默认触摸事件
/*说明：winphone下默认触摸事件事件使用e.preventDefault是无效的，可通过样式来禁用，如：*/
html { -ms-touch-action:none; } //禁止winphone默认触摸事件
</code></pre>
<ul>
<li class="unchanged">取消input在ios下，输入的时候英文首字母的默认大写</li>
</ul>
<pre>&lt;<span class="pl-ent">input</span> <span class="pl-e">autocapitalize</span>=<span class="pl-s"><span class="pl-pds">"</span>off<span class="pl-pds">"</span></span> <span class="pl-e">autocorrect</span>=<span class="pl-s"><span class="pl-pds">"</span>off<span class="pl-pds">"</span></span> /&gt;</pre>
<ul>
<li class="unchanged">手机拍照和上传图片</li>
</ul>
<pre><code>//IOS有拍照、录像、选取本地图片功能，部分Android只有选择本地图片功能。Winphone不支持
&lt;input type="file" accept="images/*" /&gt;
&lt;input type="file" accept="video/*" /&gt;
</code></pre>
<ul>
<li class="unchanged">屏幕旋转的事件和样式</li>
</ul>
<pre lang="JS&amp;CSs"><code>//JS处理
function orientInit(){
	var orientChk = document.documentElement.clientWidth &gt; document.documentElement.clientHeight?'landscape':'portrait';
	if(orientChk =='lapdscape'){
		//这里是横屏下需要执行的事件
	}else{
		//这里是竖屏下需要执行的事件
	}
}

orientInit();
window.addEventListener('onorientationchange' in window?'orientationchange':'resize', function(){
	setTimeout(orientInit, 100);
},false)	

//CSS处理
//竖屏时样式
@media all and (orientation:portrait){   }
//横屏时样式
@media all and (orientation:landscape){   }
</code></pre>
<ul>
<li class="unchanged">audio元素和video元素在ios和andriod中无法自动播放</li>
</ul>
<pre><code>//音频，写法一
&lt;audio src="music/bg.mp3" autoplay loop controls&gt;你的浏览器还不支持哦&lt;/audio&gt;

//音频，写法二
&lt;audio controls="controls"&gt;	
	&lt;source src="music/bg.ogg" type="audio/ogg"&gt;&lt;/source&gt;
	&lt;source src="music/bg.mp3" type="audio/mpeg"&gt;&lt;/source&gt;
	优先播放音乐bg.ogg，不支持在播放bg.mp3
&lt;/audio&gt;

//JS绑定自动播放（操作window时，播放音乐）
$(window).one('touchstart', function(){
	music.play();
})

//微信下兼容处理
document.addEventListener("WeixinJSBridgeReady", function () {
    music.play();
}, false);

//小结
//1.audio元素的autoplay属性在IOS及Android上无法使用，在PC端正常
//2.audio元素没有设置controls时，在IOS及Android会占据空间大小，而在PC端Chrome是不会占据任何空间
</code></pre>
<ul>
<li class="unchanged">重力感应事件</li>
</ul>
<pre><code>// 运用HTML5的deviceMotion，调用重力感应事件
if(window.DeviceMotionEvent){
	document.addEventListener('devicemotion', deviceMotionHandler, false)
}	

var speed = 30;
var x = y = z = lastX = lastY = lastZ = 0;
function deviceMotionHandler(eventData){
	var acceleration = event.accelerationIncludingGravity;
	x = acceleration.x;
	y = acceleration.y; 
	z = acceleration.z;
	if(Math.abs(x-lastX)&gt;speed || Math.abs(y-lastY)&gt;speed || Math.abs(z-lastZ)&gt;speed ){
		//这里是摇动后要执行的方法 
		yaoAfter();
	}
	lastX = x;
	lastY = y;
	lastZ = z;
}

function yaoAfter(){
	//do something
}

//说明：说见案例摇一摇效果中yao.js
</code></pre>
<ul>
<li class="unchanged">微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整</li>
</ul>
<pre><code>//以下代码可使Android机页面不再受用户字体缩放强制改变大小，但是会有1S左右延时，期间可以考虑loading来处理
if (typeof(WeixinJSBridge) == "undefined") {
	document.addEventListener("WeixinJSBridgeReady", function (e) {
	    setTimeout(function(){
		    WeixinJSBridge.invoke('setFontSizeCallback', { 'fontSize':0}, function(res){
			    alert(JSON.stringify(res));
		    })
	    }, 0)
	});
}else{	
    setTimeout(function(){
	    WeixinJSBridge.invoke('setFontSizeCallback', { 'fontSize':0}, function(res){
		    alert(JSON.stringify(res));
	    })
    }, 0)	
}

//IOS下可使用 -webkit-text-size-adjust禁止用户调整字体大小
body { -webkit-text-size-adjust:100%!important; }

//最好的解决方案：最好使用rem或百分比布局
</code></pre>
<ul>
<li class="unchanged">定位的坑</li>
</ul>
<pre><code>//fixed定位
//1.ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位
//2.android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位
//3.ios4下不支持position:fixed
//解决方案：使用[Iscroll](http://cubiq.org/iscroll-5)，如：
&lt;div id="wrapper"&gt;
        &lt;ul&gt;
               &lt;li&gt;&lt;/li&gt;
               .....
        &lt;/ul&gt;
&lt;/div&gt;
&lt;script src="iscroll.js"&gt;&lt;/script&gt;
&lt;script&gt;
	var myscroll;
	function loaded(){
		myscroll=new iScroll("wrapper");
	}
	window.addEventListener("DOMContentLoaded",loaded,false);
&lt;/script&gt;


//position定位
//Android下弹出软键盘弹出时，影响absolute元素定位
//解决方案:
var ua = navigator.userAgent.indexOf('Android');
if(ua&gt;-1){
	$('.ipt').on('focus', function(){
		$('.css').css({'visibility':'hidden'})
	}).on('blur', function(){
		$('.css').css({'visibility':'visible'})
	})
}

</code></pre>
<ul>
<li class="unchanged">播放视频不全屏</li>
</ul>
<pre><span class="pl-c"><span class="pl-c">&lt;!--</span></span>
<span class="pl-c">1.ios7+支持自动播放</span>
<span class="pl-c">2.支持Airplay的设备（如：音箱、Apple TV)播放</span>
<span class="pl-c">x-webkit-airplay="true" </span>
<span class="pl-c">3.播放视频不全屏</span>
<span class="pl-c">webkit-playsinline="true" </span>
<span class="pl-c"><span class="pl-c">--&gt;</span></span>
&lt;<span class="pl-ent">video</span> <span class="pl-e">x-webkit-airplay</span>=<span class="pl-s"><span class="pl-pds">"</span>true<span class="pl-pds">"</span></span> <span class="pl-e">webkit-playsinline</span>=<span class="pl-s"><span class="pl-pds">"</span>true<span class="pl-pds">"</span></span> <span class="pl-e">preload</span>=<span class="pl-s"><span class="pl-pds">"</span>auto<span class="pl-pds">"</span></span> <span class="pl-e">autoplay</span> <span class="pl-e">src</span>=<span class="pl-s"><span class="pl-pds">"</span>http://<span class="pl-pds">"</span></span>&gt;&lt;/<span class="pl-ent">video</span>&gt;</pre>
<ul>
<li class="unchanged">JS判断设备</li>
</ul>
<pre><code>function deviceType(){
	var ua = navigator.userAgent;
	var agent = ["Android", "iPhone", "SymbianOS", "Windows Phone", "iPad", "iPod"];	
	for(var i=0; i&lt;len,len = agent.length; i++){
		if(ua.indexOf(agent[i])&gt;0){			
			break;
		}
	}
}
deviceType();
window.addEventListener('resize', function(){
	deviceType();
})
</code></pre>
<ul>
<li class="unchanged">JS判断微信浏览器</li>
</ul>
<pre><code>function isWeixin(){
	var ua = navigator.userAgent.toLowerCase();
	if(ua.match(/MicroMessenger/i)=='micromessenger'){
		return true;
	}else{
		return false;
	}
}
</code></pre>
<ul>
<li class="unchanged">android 2.3 bug</li>
</ul>
<pre><code>//1.@-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉
//2.after和before伪类无法使用动画animation
//3.border-radius不支持%单位，如要兼容，可以给radius设置一下较大的值
//4.translate百分比的写法和scale在一起会导致失效，例如：
-webkit-transform: translate(-50%,-50%) scale(-0.5, 1)
</code></pre>
<ul>
<li class="unchanged">android 4.x bug</li>
</ul>
<pre><code>//1.三星 Galaxy S4中自带浏览器不支持border-radius缩写
//2.同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分
//3.部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色
//4.android无法同时播放多音频audio
</code></pre>
<ul>
<li class="unchanged">消除transition闪屏</li>
</ul>
<pre><span class="pl-e">.css</span> {
	<span class="pl-c1"><span class="pl-c1">-webkit-transform-style</span></span>: <span class="pl-c1">preserve-3d</span>;
	<span class="pl-c1"><span class="pl-c1">-webkit-backface-visibility</span></span>: <span class="pl-c1">hidden</span>;
	<span class="pl-c1"><span class="pl-c1">-webkit-perspective</span></span>: <span class="pl-c1">1000</span>;
}</pre>
<ul>
<li class="unchanged">开启硬件加速</li>
</ul>
<pre>//目前，像Chrome/Filefox/Safari/IE9<span class="pl-k">+</span>以及最新版本Opera都支持硬件加速，当检测到某个DOM元素应用了某些CSS规则时就会自动开启，从而解决页面闪白，保证动画流畅。
<span class="pl-e">.css</span> {
	<span class="pl-c1"><span class="pl-c1">-webkit-transform</span></span>: <span class="pl-c1">translate3d</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);
	<span class="pl-c1"><span class="pl-c1">-moz-transform</span></span>: <span class="pl-c1">translate3d</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);
	<span class="pl-c1"><span class="pl-c1">-ms-transform</span></span>: <span class="pl-c1">translate3d</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);
	<span class="pl-c1"><span class="pl-c1">transform</span></span>: <span class="pl-c1">translate3d</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);
}</pre>
<ul>
<li class="unchanged">渲染优化</li>
</ul>
<pre><code>//1.禁止使用iframe（阻塞父文档onload事件）
//2.禁止使用gif图片实现loading效果（降低CPU消耗，提升渲染性能）
//使用CSS3代码代替JS动画；
//开启GPU加速；
//使用base64位编码图片(不小图而言，大图不建议使用)
	// 对于一些小图标，可以使用base64位编码，以减少网络请求。但不建议大图使用，比较耗费CPU。小图标优势在于：
	//1.减少HTTP请求；
	//2.避免文件跨域；
	//3.修改及时生效；
</code></pre>
<ul>
<li class="unchanged">腾讯方案</li>
</ul>
<pre><span class="pl-k">var</span> <span class="pl-en">autoScale</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(){
    <span class="pl-k">var</span> ratio <span class="pl-k">=</span> <span class="pl-c1">320</span><span class="pl-k">/</span><span class="pl-c1">504</span>,   <span class="pl-c"><span class="pl-c">//</span>这是设计稿的宽高比（504是Iphone的高度去掉标题栏高度）</span>
        winW <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-smi">getElement</span>.<span class="pl-smi">clientWidth</span>,
        winH <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-smi">getElement</span>.<span class="pl-smi">clientHeight</span>,
        ratio2 <span class="pl-k">=</span> winW<span class="pl-k">/</span>winH,
        scale;
    <span class="pl-k">if</span>(ratio<span class="pl-k">&lt;</span>ratio2){
        scale <span class="pl-k">=</span> (winH<span class="pl-k">/</span><span class="pl-c1">504</span>).<span class="pl-c1">toString</span>().<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>, <span class="pl-c1">6</span>);
    }<span class="pl-k">else</span>{
        scale <span class="pl-k">=</span> (winW<span class="pl-k">/</span><span class="pl-c1">320</span>).<span class="pl-c1">toString</span>().<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>, <span class="pl-c1">6</span>);  
    }
    <span class="pl-k">var</span> cssText <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">'</span>-webkit-transform: scale(<span class="pl-pds">'</span></span><span class="pl-k">+</span>scale<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">'</span>);-webkit-transform-origin: top; opacity:1;<span class="pl-pds">'</span></span>  
    <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">'</span>.wrap<span class="pl-pds">'</span></span>).<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">'</span>style<span class="pl-pds">'</span></span>, cssText);
}
<span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){
    <span class="pl-k">if</span>(<span class="pl-c1">document</span>.<span class="pl-c1">documentElement</span>.<span class="pl-smi">clientWidth</span><span class="pl-k">/</span><span class="pl-c1">document</span>.<span class="pl-c1">documentElement</span>.<span class="pl-smi">clientHeight</span> <span class="pl-k">!==</span> <span class="pl-c1">320</span><span class="pl-k">/</span><span class="pl-c1">504</span>){
        <span class="pl-en">autoScale</span>();
    }<span class="pl-k">else</span>{
        <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">'</span>.page<span class="pl-pds">'</span></span>).<span class="pl-en">css</span>({<span class="pl-s"><span class="pl-pds">'</span>opacity<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-c1">1</span>});
    }
}, <span class="pl-c1">300</span>)  <span class="pl-c"><span class="pl-c">//</span>添加一定时长以确保宽高获取正确</span>
<span class="pl-c1">window</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">'</span>onorientationchange<span class="pl-pds">'</span></span> <span class="pl-k">in</span> <span class="pl-c1">window</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">'</span>orientationchange<span class="pl-pds">'</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">'</span>resize<span class="pl-pds">'</span></span>, autoScale, <span class="pl-c1">false</span>){
        <span class="pl-en">detectOrientatioin</span>();
}   <span class="pl-c"><span class="pl-c">//</span>切换横竖屏</span>

<span class="pl-k">function</span> <span class="pl-en">detectOrientatioin</span>(){
    <span class="pl-k">if</span>(<span class="pl-c1">window</span>.<span class="pl-smi">orientation</span><span class="pl-k">==</span><span class="pl-c1">180</span> <span class="pl-k">||</span> <span class="pl-c1">window</span>.<span class="pl-smi">orientation</span><span class="pl-k">==</span><span class="pl-c1">0</span>){
        <span class="pl-c"><span class="pl-c">//</span>竖屏</span>
    }
    <span class="pl-k">if</span>(<span class="pl-c1">window</span>.<span class="pl-smi">orientation</span><span class="pl-k">==</span><span class="pl-c1">90</span> <span class="pl-k">||</span> <span class="pl-c1">window</span>.<span class="pl-smi">orientation</span><span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">90</span>){
        <span class="pl-c"><span class="pl-c">//</span>横屏</span>
    }
}</pre>
<p>常用的移动端框架
zepto.js
- <a href="http://zeptojs.com/">官网</a>
- <a href="http://www.css88.com/doc/zeptojs_api/">中文网</a>
- <a href="https://github.com/madrobby/zepto/blob/master/src/detect.js">浏览器检测</a>
- <a href="https://github.com/madrobby/zepto/blob/master/src/touch.js">tap事件</a></p>
</div>